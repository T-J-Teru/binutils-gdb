# Copyright 2020 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Tests a specific combination, a tailcall into a function, which then
# has another function inlined within it.  So:
#
#   main --> test_func --> foo --> bar
#
#   main makes a normal call to test_func.
#
#   test_func makes a tail call to foo.
#
#   bar is inlined within foo.
#
# We should still see test_func in the call stack.

standard_testfile

if { [prepare_for_testing "failed to prepare" ${testfile} \
	  [list $srcfile] {debug optimize=-O2}] } {
    return -1
}

if ![runto_main] {
    return -1
}

gdb_breakpoint "bar"
gdb_continue_to_breakpoint "bar"

gdb_test "bt" \
    [multi_line "#0  bar \\(\\).*" \
	        "#1  foo \\(\\).*" \
	 	"#2  $hex in test_func \\(\\).*" \
	 	"#3  $hex in main \\(\\).*" ]
