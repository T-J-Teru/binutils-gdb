# Copyright 2005, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This file was written by David Lecomber (david@allinea.com)

# This file is part of the gdb testsuite.  It contains test for printing
# the elements of an array which is passed as pointer to a subroutine.

if $tracelevel then {
	strace $tracelevel
}

if { [skip_fortran_tests] } { return -1 }

set testfile "array-advanced"
set srcfile ${testfile}.f90
set binfile ${objdir}/${subdir}/${testfile}

if {[gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" \
	 executable {debug f77}] != ""} {
    return -1
}

gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}

if ![runto [gdb_get_line_number "call testpoint1"] ] then {
    perror "couldn't run to breakpoint "
    continue
}

gdb_test "print a(7)" ".* = 7"
gdb_test "print a(8)" ".* = 8"
gdb_test "print b(1, 2)" ".* = 15"
gdb_test "print b(10, 11)" ".* = 141"
gdb_test "print c(1, 2, 3)" ".* = 292"
gdb_test "print c(4, 5, 6)" ".* = 1111"

gdb_test "print oned" ".* = <not allocated>"
gdb_test "print twod" ".* = <not allocated>"
gdb_test "print threed" ".* = <not allocated>"
if ![runto [gdb_get_line_number "call testpoint2"] ] then {
    perror "couldn't run to breakpoint "
    continue
}


if ![runto [gdb_get_line_number "call testpoint3"] ] then {
    perror "couldn't run to breakpoint "
    continue
}

gdb_test "print oned(7)" ".* = 7"
gdb_test "print oned(8)" ".* = 8"
gdb_test "print twod(1, 2)" ".* = 15"
gdb_test "print twod(10, 11)" ".* = 141"
gdb_test "print threed(1, 2, 3)" ".* = 292"
gdb_test "print threed(4, 5, 6)" ".* = 1111"

if ![runto [gdb_get_line_number "call testpoint4"] ] then {
    perror "couldn't run to breakpoint "
    continue
}

gdb_test "print oned" ".* = <not allocated>"
gdb_test "print twod" ".* = <not allocated>"
gdb_test "print threed" ".* = <not allocated>"
