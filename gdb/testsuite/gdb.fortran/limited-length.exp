# Copyright 2021 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This file tests GDB's limited length array printing.

load_lib "fortran.exp"

if { [skip_fortran_tests] } { continue }

standard_testfile .f90

if { [prepare_for_testing "failed to prepare" $testfile $srcfile {debug f90}] } {
    return -1
}

if { ![fortran_runto_main] } {
    perror "Could not run to main."
    continue
}

gdb_breakpoint [gdb_get_line_number "Break Here"]
gdb_continue_to_breakpoint "stop-here" ".*Break Here.*"

with_test_prefix "with standard max-value size" {
    gdb_test "print large_4d_array" \
	" = \\(\\(\\(\\(1, 2, 3\\) \\(4, 5, 6\\) .* \\(76, 77, 78\\) \\(79, 80, 81\\)\\)\\)\\)"
    gdb_test "print large_1d_array" \
	" = \\(1, 2, 3, 4, 5, 6, 7, .* 76, 77, 78, 79, 80, 81\\)"
}

gdb_test_no_output "set max-value-size 400"

with_test_prefix "with reduced max-value size" {
    gdb_test "print large_4d_array" \
	"value requires $decimal bytes, which is more than max-value-size"
    gdb_test "print large_1d_array" \
	"value requires $decimal bytes, which is more than max-value-size"
}

with_test_prefix "with reduced print -elements flag" {
    gdb_test "print -elements 5 -- large_4d_array" \
	" = \\(\\(\\(\\(1, 2, 3\\) \\(4, 5, \\.\\.\\.\\) \\.\\.\\.\\) \\.\\.\\.\\) \\.\\.\\.\\)"
    gdb_test "print -elements 5 -- large_1d_array" \
	" = \\(1, 2, 3, 4, 5, \\.\\.\\.\\)"
}

gdb_test_no_output "set print elements 5"

with_test_prefix "with reduced print elements" {
    gdb_test "print large_4d_array" \
	" = \\(\\(\\(\\(1, 2, 3\\) \\(4, 5, \\.\\.\\.\\) \\.\\.\\.\\) \\.\\.\\.\\) \\.\\.\\.\\)"
    gdb_test "print large_1d_array" \
	" = \\(1, 2, 3, 4, 5, \\.\\.\\.\\)"
}
