# Copyright 2007-2019 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

standard_testfile .f90

if {[prepare_for_testing "failed to prepare" $testfile $srcfile \
	 {debug f90 quiet}]} {
    return -1
}

if ![runto MAIN__] then {
    perror "Couldn't run to MAIN__"
    continue
}


gdb_breakpoint [gdb_get_line_number "stop"]
gdb_continue_to_breakpoint "continue"

# Print the inferior variable VAR_NAME which is a complex value, and
# then print its component parts.  Check the type of VAR_NAME is
# FULL_TYPE, and the type of all the parts is COMPONENT_TYPE.
proc test_complex_value { var_name real_val imag_val full_type \
			      component_type } {
    gdb_test "print ${var_name}" " = \\(${real_val},${imag_val}\\)"
    gdb_test "whatis ${var_name}" " = ${full_type}"
    gdb_test "print \$_creal (${var_name})" " = ${real_val}"
    gdb_test "whatis \$" " = ${component_type}"
    gdb_test "print ${var_name} (1)" " = ${real_val}"
    gdb_test "whatis \$" " = ${component_type}"
    gdb_test "print \$_cimag (${var_name})" " = ${imag_val}"
    gdb_test "whatis \$" " = ${component_type}"
    gdb_test "print ${var_name} (2)" " = ${imag_val}"
    gdb_test "whatis \$" " = ${component_type}"

}

test_complex_value "c" "1000" "-50" "complex\\(kind=4\\)" "real"
test_complex_value "c4" "1000" "-50" "complex\\(kind=4\\)" "real"
test_complex_value "c8" "321" "-22" "complex\\(kind=8\\)" "real\\*8"
test_complex_value "dc" "321" "-22" "complex\\(kind=8\\)" "real\\*8"
test_complex_value "c16" "-874" "19" "complex\\(kind=16\\)" "real\\*16"
