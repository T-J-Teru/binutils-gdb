# Copyright 2019 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This is a set of tests related to GDB's ability to parse and
# correctly handle the (kind=N) type adjustment mechanism within
# Fortran.

load_lib "fortran.exp"

if { [skip_fortran_tests] } { continue }

# Test parsing of `(kind=N)` type modifiers.
proc test_basic_parsing_of_type_kinds {} {
    gdb_test "p ((character (kind=1)) 1)" " = 1"

    gdb_test "p ((complex (kind=4)) 1)" " = \\(1,0\\)"
    gdb_test "p ((complex (kind=8)) 1)" " = \\(1,0\\)"
    gdb_test "p ((complex (kind=16)) 1)" " = \\(1,0\\)"

    gdb_test "p ((real (kind=4)) 1)" " = 1"
    gdb_test "p ((real (kind=8)) 1)" " = 1"
    gdb_test "p ((real (kind=16)) 1)" " = 1"

    gdb_test "p ((logical (kind=1)) 1)" " = \\.TRUE\\."
    gdb_test "p ((logical (kind=4)) 1)" " = \\.TRUE\\."
    gdb_test "p ((logical (kind=8)) 1)" " = \\.TRUE\\."

    gdb_test "p ((integer (kind=2)) 1)" " = 1"
    gdb_test "p ((integer (kind=4)) 1)" " = 1"
}

proc test_parsing_invalid_type_kinds {} {
    foreach typename {complex real logical integer} {
	foreach typesize {3 5 7 9} {
	    gdb_test "p (($typename (kind=$typesize)) 1)" "unsupported kind $typesize for type $typename.*"
	}
    }
}

clean_restart

if [set_lang_fortran] then {
    test_basic_parsing_of_type_kinds
    test_parsing_invalid_type_kinds
} else {
    warning "$test_name tests suppressed." 0
}
