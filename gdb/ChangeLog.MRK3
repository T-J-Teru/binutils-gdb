2014-02-28  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* mrk3-tdep.c (mrk3_is_sys_mem_space): Use 32-bit temporary.
	(mrk3_is_usr_mem_space): Likewise.
	(mrk3_pseudo_register_read): Reduce SP memory space problem to warning.
	(mrk3_print_insn): Use middle-endian 32-bit output.

2014-02-28  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* mrk3-tdep.c (mrk3_get_mem_type): Deleted.
	(mrk3_is_data_address): Created.
	(mrk3_is_code_address): Created.
	(mrk3_adjust_breakpoint_address): Deleted.
	(mrk3_memory_insert_breakpoint): Deleted.
	(mrk3_memory_remove_breakpoint): Deleted.
	(mrk3_pointer_to_address): Use function to check if code/data address.
	(mrk3_address_to_pointer): Likewise.
	(mrk3_read_pc): Don't had memory space/type flags.
	(mrk3_unwind_pc): Convert to byte code address
	(mrk3_unwind_sp): Convert to data address.
	(mrk3_gdbarch_init): Remove unused calls.

2014-02-28  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Work in progress to support breakpoints and word addresses
	properly.

	* mrk3-tdep.c (mrk3_adjust_breakpoint_address): Created.
	(mrk3_addr_bits_remove): Remove #if 0, rewrite and move in file.
	(mrk3_read_pc): Created.
	(mrk3_write_pc): Created.
	(mrk3_gdbarch_init): Add mrk3_read_pc, mrk3_write_pc,
	mrk3_addr_bits_remove and mrk3_adjust_breakpoint_address.

2014-02-27  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* mrk3-tdep.c (mrk3_get_mem_space): Only trace for higher
	debug value.
	(mrk3_breakpoint_from_pc): Turn address into word pointer.
	(mrk3_print_insn): Turn address into work pointer.

2014-02-27  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* breakpoint.c (bp_loc_is_permanent): Use pointer returned by
	gdbarch_breakpoint_from_pc for automatic memory restoration.

2014-02-27  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* mrk3-tdep.c (mrk3_pointer_to_address): Convert from word
	addressed code pointers to byte addressed code addresses.
	(mrk3_address_to_pointer): Convert from byte addressed code
	addresses to word adressed code pointers.

2014-02-27  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* mrk3-tdep.c: Define 32 bit flag constants for memory spaces and
	types. Change breakpoint instruction value.
	(mrk3_get_mem_space): Return 32-bit result.
	(mrk3_get_mem_type): Likewise.
	(mrk3_breakpoint_from_pc): No need to shift top bits
	(mrk3_pointer_to_address): Just sanity check - no conversion.
	(mrk3_address_to_pointer): Likeiwse.
	(mrk3_print_insn): Created.
	(mrk3_gdbarch_init): Use temporary disassembler function.

2013-12-12  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* mrk3-tdep.c (breakpoint_from_pc): Add debug message.

2013-12-12  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* mrk3-tdep.c (breakpoint_from_pc): Explicitly make code address.

2013-12-12  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* mrk3-tdep.c (mrk3_get_mem_space, mrk3_get_mem_type): Use silent
	remote command, better debug message.
	(mrk3_register_name, mrk3_register_type)
	(mrk3_pseudo_register_read, mrk3_pseudo_register_write)
	(mrk3_dwarf2_reg_to_regnum): Use warning instead of
	fprintf_unfiltered for warning messages.
	(mrk3_frame_cache): Add debug message.

2013-12-12  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Fix broken stack frame analysis.

	* mrk3-tdep.c: Disable all p40 headers. Rename this_prologue_cache
	to this_cache throughout for brevity, use locally defined regnums
	throughout, prefix regnum #defines with MRK3 to avoid name clashing
	(MRK3_MEM_SPACE_MASK, MRK3_MEM_SPACE_SYS, MRK3_MEM_SPACE_APP1)
	(MRK3_MEM_SPACE_APP2, MRK3_MEM_TYPE_MASK, MRK3_MEM_TYPE_DATA)
	(MRK3_MEM_TYPE_CODE): Define.
	(struct mrk3_objfile_info_t, mrk3_debug): Define.
	(mrk3_get_mem_space): Correct prototype declaration, clearer
	warning, and return new defined mem space flag.
	(mrk3_get_mem_type, mrk3_is_sys_mem_space, mrk3_is_usr_mem_space):
	Created.
	(mrk3_pseudo_register_read): New return type, use new memory space
	type functions.
	(mrk3_pseudo_register_write): Use new memory space type functions.
	(mrk3_dwarf2_reg_to_regnum): Use locally defined constants.
	(mrk3_map_dwarf2_data_addr, mrk3_free_objfile_info)
	(mrk3_save_objfile_name): Disable.
	(mrk3_breakpoint_from_pc): Make address manipulation explicit.
	(enable_system_mode_stack_traces): Extern declaration deleted.
	(mrk3_analyze_prologue): Simplified arguments and analysis, with
	no unwinding and setting the frame ID.
	(mrk3_analyze_frame_prologue): Renamed to mrk3_frame_cache for
	consistency with other architectures.
	(mrk3_frame_cache): Renamed from mrk3_analyze_frame_prologue, Use
	simplified mrk3_analyze_frame_prologue.
	(mrk3_frame_prev_register): Always analyse frame, even if null.
	(mrk3_frame_unwind, mrk3_frame_base): Use named fields to avoid
	embarrassment when struct changes.
	(mrk3_address_bits_remove, mrk3_address_class_type_flags)
	(mrk3_address_class_name_to_type_flags): Disabled.
	(mrk3_dump_tdep): Created.
	(_initialize_mrk3_tdep): Replace obsolete register_gdbarch_init
	with gdbarch_register and use of target depedency dumper, add new
	"set/show debug arc" commands.

2013-12-12  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Fix minor diffs with upstream

	* breakpoint.c: Minor changes to match upstream.
	* doc/stabs.texinfo: Minor changes to match upstream.
	* dwarf2read.c: Minor changes to match upstream.
	* frame.c: Minor changes to match upstream.

2013-12-11  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* mrk3-tdep.c (mrk3_register_type): Make PC 32-bit.

2013-12-11  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Fix the worst of the merge wreckage for MRK3

	* block.c: Make identical to upstream.
	* configure.tgt: Replace missing ;;
	* dwarf2loc.c: Make identical to upstream.
	* mrk3-tdep.c: Remove inclusion of obsolete gdb_string.h.

2013-12-11  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* mrk3-tdep.c: Adjust all formatting to GNU C style.

2013-12-11  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* mrk3-tdep.c (mrk3_analyze_prologue): Disable reference to
	enable_system_mode_stack_traces (requires simulator linking).
	(mrk3_gdbarch_init): Force endianness to be little before
	allocating architecture.

2013-12-11  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* mrk3-tdep.c (mrk3_get_mem_space): Use strtol instead of atoi.

2013-12-11  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Make SP pseudo register and omit SFRs (for now)

	* mrk3-tdep.c (R0_REGNUM, PC_REGNUM, PSW_REGNUM, SSP_REGNUM)
	(USP_REGNUM, R4E_REGNUM, R5E_REGNUM, R6E_REGNUM, SFR_START)
	(PSEUDO_START, SP_REGNUM, R0L_REGNUM, R1L_REGNUM, R2L_REGNUM)
	(R3L_REGNUM, R0H_REGNUM, R1H_REGNUM, R2H_REGNUM, R3H_REGNUM)
	(R4L_REGNUM, R5L_REGNUM, R6L_REGNUM, SYS_REGNUM, INT_REGNUM)
	(ZERO_REGNUM, NEG_REGNUM, OVERFLOW_REGNUM, CARRY_REGNUM)
	(PSEUDO_END): Defines for register numbers.
	(NUM_CPU_REGS, NUM_SFRS, NUM_REAL_REGS, NUM_PSEUDO_REGS)
	(NUM_REGS): Defined in terms of previous #defines.
	(mrk3_ui_memcpy, mrk3_get_mem_space): Moved to start of source file.
	(mrk3_register_name, mrk3_register_type): SP is now the first
	pseudo-reg, SFRs removed.
	(mrk3_pseudo_register_read, mrk3_pseudo_register_write): Add SP as
	first pseudo-reg, rewrite to use #defined register numbers.
	(mrk3_gdbarch_init): Use #defined values for SP and PC.

2013-12-10  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Revert out MRK3 specific changes in generic files to make merging
	easier and give a clean baseline.

	* block.c: Remove P40 headers.
	(blockvector_for_pc_sect): Remove MRK3 specific code.
	* breakpoint.c: Remove P40 headers.
	(breakpoint_here_p, bp_loc_is_permanent, resolve_sal_pc): Remove
	MRK3 specific code.
	* configure.tgt: Correct layout.
	* doc/gdbint.texinfo: Match to upstream (not NXP issue).
	* dwarf2expr.c (execute_stack_op): Remove MRK3 specific code.
	* dwarf2loc.c (find_location_expression): Remove MRK3 specific
	code.
	* dwarf2read.c (create_all_comp_units, add_partial_symbol)
	(read_attribute_value, read_address, dwarf_decode_lines)
	(var_decode_location, new_symbol, decode_locdesc): Remove MRK3
	specific code.
	(read_3byte_address_signed, read_3byte_address)
	(add_line_info_trace): Delete MRK3 specific functions.
	* elfread.c (elf_symtab_read): Remove MRK3 specific code.
	* findvar.c (read_var_value): Likewise.
	* frame.c: Remove P40 headers.
	(get_frame_func, get_prev_frame_1, get_prev_frame): Remove MRK3
	specific code.
	* frame.h: Match to upstream (not NXP issue).
	* gdb.1: Match to upstream (not NXP issue).
	* mi/mi-cmd-stack.c (list_args_or_locals): Remove MRK3 specific
	code.
	* minsyms.c: Remove P40 headers.
	(lookup_minimal_symbol_by_pc_name): Remove MRK3 specific code.
	* remote-sim.c (gdbsim_load): Remove MRK3 specific code.
	* symfile.c: Match to upstream (not NXP issue).
	* symtab.c: Remove P40 headers.
	(find_pc_sect_psymtab_closer, find_pc_sect_psymtab)
	(find_pc_sect_psymbol, lookup_block_symbol, find_pc_sect_symtab)
	(find_pc_sect_line, find_pc_line): Remove MRK3 specific code.
	* target.h: Match to upstream (not NXP issue).
	* value.c (unpack_long, unpack_bits_as_long, modify_field)
	(pack_long): Remove MRK3 specific code.

2013-12-10  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* breakpoint.c: #if 0 to remove mrk3 specific code.
	* frame.c: Likewise.
	* mrk3-tdep.c (mrk3_load_symbol_info): Disabled with #if 0.
	(mrk3_ui_memcpy, mrk3_get_mem_space): Created.
	(mrk3_get_memspace_from_objfile_name): Disabled with #if 0.
	(mrk3_breakpoint_from_pc): Rewritten to use mrk3_get_mem_space.
	(mrk3_memory_insert_breakpoint, mrk3_memory_remove_breakpoint):
	Disabled with #if 0.
	(mrk3_analyze_prologue): Disable call to Dll_GetPrologueAnalysis
	with #if 0.
	(mrk3_address_class_type_flags_to_name): Disabled with #if 0.
	(mrk3_gdbarch_init): Disable calls to
	set_gdbarch_memory_insert_breakpoint and
	set_gdbarch_memory_remove_breakpoint with #if 0.

2013-12-09  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* ChangeLog.MRK3: Created.
	* mrk3-tdep.c (NUM_CPU_REGS, NUM_SFRS, NUM_REAL_REGS)
	(NUM_PSEUDO_REGS, NUM_REGS): Created.
	(MRK3_MAX_REGCOUNT): Deleted.
	(mrk3_register_name): Rewritten to use explicit names.
	(mrk3_register_type): Rewritten to use explicit types.
	(mrk3_pseudo_register_read, mrk3_pseudo_register_write): Created.
	(mrk3_gdbarch_init): Set gdbarch_num_regs from NUM_REAL_REGS,
	define gdbarch_num_pseudo_regs and pseudo reg read/write funcs.
